<?php

/**
 * implements hook_install()
 */
function farmosnws_install() {

  // add the quantity types

  // get the vocabulary id
  $vocab_qty_units = taxonomy_vocabulary_machine_name_load('farm_quantity_units');

  // list of terms to add 
  $terms_qty_list = array('Inches', 'MPH', 'Miles', 'Knots', 'KM', 'Degrees');
  $terms_qty_list .= array('KPH', 'Percent', 'Fahrenheit', 'Celsius', 'Direction');
  
  // check if the term exists, if it does not then add it
  foreach($terms_qty_list as $term_qty_item) {
    $taxterm = taxonomy_get_term_by_name($term_qty_item);
  	
    if (count($taxterm) == 0) {
      $tax_qty_term = new stdClass();
      $tax_qty_term->name = $term_qty_item;
      $tax_qty_term->vid = $vocab_qty_units->vid;
      taxonomy_term_save($tax_qty_term);
      
      watchdog('farmosnws', 'Created ' . $term_qty_item . ' taxonomy term.', array(), WATCHDOG_INFO, NULL);
    }
    else {
      watchdog('farmosnws', 'Matched taxonomy term ' . $term_qty_item, array(), WATCHDOG_INFO, NULL);
    }
  }

  // set default variable values
  // variable_set('farmosnws_temp_units', 'us');
  variable_set('farmosnws_delete_xml', 'yes');
  variable_set('farmosnws_cron_last', 0);
  variable_set('farmosnws_locations', 'KMGM');
  variable_set('farmosnws_log_dewpoint', 1);
  variable_set('farmosnws_log_pressures', 1);
  variable_set('farmosnws_log_temperature', 1);
  variable_set('farmosnws_log_visibility', 1);
  variable_set('farmosnws_log_weather', 1);
  variable_set('farmosnws_log_winddirection', 1);
  variable_set('farmosnws_log_windspeed', 1);
}

/**
 * implements hook_enable()
 */
function farmosnws_enable() {
  // notice to visit configuration page to set initial values for variables
  farmosnws_display_warning("Visit the module " . l(t("configuration page"), 'admin/config/services/farmosnws') . " to complete module setup.");
  
  farmosnws_check_farmos_measurements();
  farmosnws_check_cron_time();
}

/**
 * implements hook_uninstall()
 */
function farmosnws_uninstall() {
  // delete all the variables created by the module
  $query = "select name from {variable} where name like :varname";
  $result = db_query($query, array(':varname' => db_like('farmosnws') . '%'));

  foreach($result as $row) {
    variable_del($row->name);
  } // end foreach
  
  menu_rebuild();

  watchdog('farmosnws', 'FarmOS NWS module has been uninstalled', array(), WATCHDOG_INFO, NULL);
} // end function

/**
 * Use FarmOS unit of measurement setting, limit the number of feed pulls from 
 * NWS, and update new and existing variables.
 */
function farmosnws_update_7201(&$sandbox) {
  // get the vocabulary id
  $vocab_qty_units = taxonomy_vocabulary_machine_name_load('farm_quantity_units');

  // list of terms to add
  $terms_qty_list = array('KPH', 'Kilometers', 'Degrees', 'Percent');

  // check if the term exists, if it does not then add it
  foreach($terms_qty_list as $term_qty_item) {
    $taxterm = taxonomy_get_term_by_name($term_qty_item);

    if (count($taxterm) == 0) {
      $tax_qty_term = new stdClass();
      $tax_qty_term->name = $term_qty_item;
      $tax_qty_term->vid = $vocab_qty_units->vid;
      taxonomy_term_save($tax_qty_term);

      watchdog('farmosnws', 'Created ' . $term_qty_item . ' taxonomy term.', array(), WATCHDOG_INFO, NULL);
    }
    else {
      watchdog('farmosnws', 'Matched taxonomy term ' . $term_qty_item, array(), WATCHDOG_INFO, NULL);
    }
  }

  // delete unused variables
  variable_del('farmosnws_temp_units');

  // set new variables being used
  variable_set('farmosnws_cron_last', 0);
  variable_set('farmosnws_log_dewpoint', 1);
  variable_set('farmosnws_log_pressures', 1);
  variable_set('farmosnws_log_temperature', 1);
  variable_set('farmosnws_log_visibility', 1);
  variable_set('farmosnws_log_weather', 1);
  variable_set('farmosnws_log_winddirection', 1);
  variable_set('farmosnws_log_windspeed', 1);

  // fix variable that was saved with wrong name
  $delete_feed_value = variable_get('farmosnws_del_process_feed', 'no');
  variable_set('farmosnws_delete_xml', $delete_feed_value);
  variable_del('farmosnws_del_process_feed');
}


function farmosnws_update_7202() {
  // create user for nwsdata if it doesn't already exist
  $user_data = array(
    'name' => 'farmosnwsdata',
    'mail' => 'farmosnwsdata@localhost.com',
    'pass' => user_password(20),
    'status' => 0,
    'init' => 'farmosnwsdata@localhost.com',
    'roles' => array(
      DRUPAL_AUTHENTICATED_RID = 'authenticated user',
    ),
  );
}
