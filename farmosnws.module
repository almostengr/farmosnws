<?php

/**
 * 
 * Implements hook_menu()
 */
function farmosnws_menu() {
  $items = array();

  $items['admin/config/farmosnws'] = array(
    'title' => t('FarmOS NWS Settings'),
    'description' => 'Add and remove additional feeds to be pulled by FarmOS NWS',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('farmosnws_admin_form'),
    'access arguments' => array('access administration pages'),
    'type' => MENU_NORMAL_ITEM,
  );

  // TO DO: add call to bypass cron ron
  /*
  $items['admin/config/farmosnws/weather_force'] = array(
    'title' => t('FarmOS NWS Data Pull'),
    'description' => 'Pull weather data more frequently than the hourly limit.',
    'page callback' => 'farmosnws_get_xml',
    'access arguments' => array('access administration pages'),
    'type' => MENU_CALLBACK,
  );
  */

  return $items;
}

/**
 * 
 * Implements hook_cron()
 */
function farmosnws_cron() {
  $pullfeed = farmosnws_get_new_feed();
  
  if ($pullfeed == TRUE) {
    farmosnws_get_xml();
    variable_set('farmosnws_cron_last', REQUEST_TIME);
  }
  else {
    watchdog('farmosnws', 'Skipping pulling weather feed.', array(), WATCHDOG_INFO, NULL);
  }
}

/** 
 *
 * Determine whether to pull the data feed from the NWS based on when cron was last run
 */
function farmosnws_get_new_feed() {
  $cron_last = variable_get('farmosnws_cron_last');
  $time_diff = REQUEST_TIME - $cron_last;
 
  // if the feed was last pulled over an hour ago, then set value to true.
  if ($time_diff >= 3600) {
    $returnval = TRUE;
  }
  else {
    $returnval = FALSE;
  }
  return $returnval;
}

/**
 *
 * Check and create if necessary the path where the weather feeds will be stored.
 */
function farmosnws_create_feed_dir($feedpath) {
  $mkdirsuccess = NULL;

  // check to see if the feeds directory exists. If not attempt to create it.
  if ( is_dir($feedpath) == FALSE ) {
    $mkdirsuccess = mkdir($weatherfeedsdir, 755);

    // verify directory exists
    if ( $feedpath == FALSE ){
      watchdog('farmosnws', 'Unable to create the weather feed directory.', array(), WATCHDOG_ERROR, NULL);
    }
    else {
      watchdog('farmosnws', 'Created weather feed directory.', array(), WATCHDOG_INFO, NULL);
    } // end if
  }
  else {
    // skipping actions
    $mkdirsuccess = TRUE;
  } // end if

  return $mkdirsuccess;
}

/**
 *
 * get the weather data from the NWS
 */
function farmosnws_get_xml() {
  $weatherfeedsdir = variable_get('farmosnws_weather_feeds_dir');
  
  $locations = variable_get('farmosnws_locations', '');
  $location_array = explode("\n", $locations);
  $location_count = count($location_array);

  foreach ($location_array as $loc) {
    $weather_feed_name = $weather_feed_dir . '/' . $uniqid($loc, FALSE) . '.xml';
    $url = "http://w1.weather.gov/xml/current_obs/" . $loc . ".xml";

    watchdog('farmosnws', 'Getting weather data for ' . $loc, array(), WATCHDOG_INFO, NULL);

    $response = drupal_http_request($url, array());

    watchdog('farmosnws', 'Response code: ' . $response->code, array(), WATCHDOG_INFO, NULL);

    // if error occurs when performing the request
    if ( $response->error ) {
      watchdog('farmosnws', $response->error, array(), WATCHDOG_ERROR, NULL);
      drupal_set_message($response->error, 'error', FALSE);
    }
    // if no errors occur when performing the request
    else{
      // if the directory doesnt exist, then create it with 755 permissions
      $direxist = farmosnws_create_feed_dir($weatherfeedsdir);

      if ( $direxist == FALSE ) {
        drupal_set_message("Feed could not be downloaded because the directory does not exist. Please verify that Drupal has write access and try again.", 'error', FALSE);
      } // end if
      else {
        // save the contents retrieved
        file_put_contents($weather_feed_name, $response->data);
        watchdog('farmosnws', 'Weather data saved to ' . $weather_feed_name, array(), WATCHDOG_INFO, NULL);
      }
    } // end else
  } // end foreach
} // end function

/**
 *
 * Module configuration form
 */
function farmosnws_admin_form() {
  $form = array();
  
  $form['farmosnws_locations'] = array(
    '#type' => 'textarea',
    '#title' => t('Locations'),
    '#description' => t('Enter the locations that you would like weather data pulled for. Each location must be entered on a separate line.'),
    '#required' => TRUE,
    '#default_value' => variable_get('farmosnws_locations'),
  );
  $form['farmosnws_weather_feeds_dir'] = array(
    '#type' => 'textfield',
    '#title' => t('Feeds Directory'),
    '#required' => TRUE,
    '#description' => t('The full directory path to where weather feeds should be saved to.'),
    '#default_value' => variable_get('farmosnws_weather_feeds_dir'),
  );
  
  return system_settings_form($form);
}

/**
 *
 * Validate the module settings
 */
function farmosnws_admin_form_validate($form, &$form_state) {
  $weatherfeedsdir = $form_state['values']['farmosnws_weather_feeds_dir'];
  
  $direxist = farmosnws_create_feed_dir($weatherfeedsdir);
  if ( $direxist == FALSE ){
    watchdog('farmosnws', 'Unable to create the weather feed directory.', array(), WATCHDOG_ERROR, NULL);
    form_set_error('farmosnws_weather_feeds_dir', 'The weather feed directory cannot be created. Please verify that Drupal as write permissions and try again.');
  }
  else {
    watchdog('farmosnws', 'Created weather feed directory.', array(), WATCHDOG_INFO, NULL);
  } // end if
} // end if

